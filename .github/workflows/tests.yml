name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ 3.7, 3.8, 3.9 ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up venv
      uses: actions/poetry-action@v1
      with:
        os: ${{ matrix.os }}
        python-version: ${{ matrix.python-version }}
    - name: Test with pytest
      run: |
        poetry run pytest --cov-report xml:codecov.xml
    - name: Codecov
      run: |
        bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}

  black:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ 3.7 ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up venv
      uses: actions/poetry-action@v1
      with:
        os: ${{ matrix.os }}
        python-version: ${{ matrix.python-version }}
    - name: Lint with Black
      run: |
        poetry run black . --check

  isort:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ 3.7 ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up venv
      uses: actions/poetry-action@v1
      with:
        os: ${{ matrix.os }}
        python-version: ${{ matrix.python-version }}
    - name: Check imports order
      run: |
        poetry run isort . --check

  install:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ 3.7, 3.8, 3.9 ]
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pandas-addons as dependency
        run: |
          python -m pip install --upgrade pip
          python -m pip install git+https://github.com/ClementWalter/pandas-addons.git@${{ github.ref }}
          echo ${{ github.ref }}
      - name: Import pandas-addons
        run: |
          python -c "import pandas_addons as pda"
